// Generated by CoffeeScript 1.7.1
(function() {
  Meteor.startup(function() {
    var x, _i;
    Meteor.publish('chat', function() {
      return Chat.find();
    });
    Meteor.publish('counter', function() {
      return Counter.find();
    });
    if (Chat.find().count() === 0) {
      for (x = _i = 0; _i <= 10; x = ++_i) {
        Chat.insert({
          text: 'This is line ' + x
        });
      }
    }
    if (Counter.find().count() === 0) {
      Counter.insert({
        c: 'c',
        count: 1
      });
    }
    return Counter.update({
      c: 'c'
    }, {
      count: Chat.find().count()
    });
  });

  Meteor.methods({
    addChat: function(payload) {
      var id;
      Chat.insert(payload);
      id = Counter.find({}).fetch();
      id = id[0]._id;
      return Counter.update({
        _id: id
      }, {
        $inc: {
          count: 1
        }
      });
    },
    removeChat: function(id) {
      Chat.remove({
        _id: id
      }, (function(_this) {
        return function(error, res) {
          if (error) {
            throw new Meteor.Error(404, error.sanitizedError);
            return error;
          } else {
            return '';
          }
        };
      })(this));
      id = Counter.find({}).fetch();
      id = id[0]._id;
      return Counter.update({
        _id: id
      }, {
        $inc: {
          count: -1
        }
      });
    },
    getlist: function() {
      return Chat.find().fetch();
    },
    getCount: function() {
      return Counter.findOne({
        c: 'c'
      });
    },
    reset: function() {
      var id, x, _i;
      Chat.remove({});
      for (x = _i = 0; _i <= 2; x = ++_i) {
        Chat.insert({
          text: 'This is line ' + x
        });
      }
      id = Counter.find({}).fetch();
      id = id[0]._id;
      return Counter.update({
        _id: id
      }, {
        count: 3
      });
    }
  });

}).call(this);

//# sourceMappingURL=bootstrap.map
